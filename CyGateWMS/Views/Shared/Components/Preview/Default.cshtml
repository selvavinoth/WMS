@model CyGateWMS.ViewModels.RosterViewModel


    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive" style="overflow:auto;max-height: 500px">
                <div id="dataTables-example_wrapper" class="dataTables_wrapper form-inline" role="grid">
                    <table class="table table-striped table-bordered table-hover dataTable no-footer" id="dataTables-example" aria-describedby="dataTables-example_info">
                        <thead>
                           
                            @*<tr class="row">@DateTime.Now.Month / @DateTime.Now.Year </tr>*@
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">Date</th>
                                @foreach (var item in Model.Dates)
                                {
                                    if (item.DayOfWeek.ToString() == Constants.SATURDAY || item.DayOfWeek.ToString() == Constants.SUNDAY)
                                    {
                                        <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;"><font color="red">@item.Day</font></th>
                                    }
                                    else
                                    {
                                        <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">@item.Day</th>
                                    }
                                }
                            </tr>
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">Day</th>
                                @foreach (var item in Model.Dates)
                                {
                                    if (item.DayOfWeek.ToString() == Constants.SATURDAY || item.DayOfWeek.ToString() == Constants.SUNDAY)
                                    {
                                        <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;"><font color="red">@item.DayOfWeek</font></th>
                                    }
                                    else
                                    {
                                        <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">@item.DayOfWeek</th>
                                    }
                                }
                                @foreach (var item in Model.RosterShifts)
                                {
                                    <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">@item.RosterShiftName</th>
                                }
                                <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">Total</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">Total Days Worked</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="dataTables-example" rowspan="1" colspan="1" aria-sort="ascending" style="width: 151px;">Cab</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var catagory in Model.Categories)
                            {
                                var users = Model.AllUsers.Where(e => e.CategoryId == catagory.CategoryId).ToList();
                                if (users.Count > 0)
                                {
                                    <tr style="background-color:cadetblue"><td><strong>@catagory.CategoryName</strong></td></tr>
                                    @for (int i = 0; i < users.Count; i++)
                                    {
                                    <tr class="gradeA even">
                                        <td class="sorting_1"> @Html.DisplayFor(modelItem => users[i].Name)</td>
                                        @{
                                            var roster = Model.Rosters.Where(e => e.UserId == users[i].Id).ToList();
                                            @foreach (var dateTime in Model.Dates)
                                            {
                                                var item = roster.Where(e => e.Date.Day == dateTime.Day).FirstOrDefault();
                                                var index = Model.Rosters.IndexOf(item);


                                                @if (Model.Rosters[index]?.RosterShift == null)
                                                {
                                                    <td><label>-</label></td>
                                                }
                                                else
                                                {
                                                    if (Model.Rosters[index].RosterShift.RosterShiftName == Constants.OFF)
                                                    {
                                                        <td style="background-color:gray">
                                                            <label>@Model.Rosters[index].RosterShift?.RosterShiftName</label>
                                                        </td>
                                                    }
                                                    else if (Model.Rosters[index].RosterShift.RosterShiftName == Constants.PL || Model.Rosters[index].RosterShift.RosterShiftName == Constants.CL || Model.Rosters[index].RosterShift.RosterShiftName == Constants.SL)
                                                    {
                                                        <td style="background-color:goldenrod">
                                                            <label>@Model.Rosters[index].RosterShift?.RosterShiftName</label>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td> <label>@Model.Rosters[index].RosterShift?.RosterShiftName</label></td>
                                                    }
                                                }

                                            }
                                            @foreach (var item in Model.RosterShifts)
                                            {
                                                <td>@roster.Where(e => e.RosterShift != null && e.RosterShift.RosterShiftId == item.RosterShiftId).Count()</td>
                                            }
                                            <td> @Model.Dates.Count()</td>
                                            <td>
                                                @roster.Where(e => e.RosterShift != null && (e.RosterShift.RosterShiftName == Constants.A ||
                                                e.RosterShift.RosterShiftName == Constants.B || e.RosterShift.RosterShiftName == Constants.C || e.RosterShift.RosterShiftName == Constants.R)).Count()
                                            </td>
                                            <td>@users[i].IsRegularShift</td>
                                        }
                                    </tr>
                                    }
                                }
                            }
                            <tr style="background-color:cadetblue"><td><strong>Shifts</strong></td></tr>
                            @foreach (var shift in Model.RosterShifts.Where(e => e.RosterShiftName == Constants.A || e.RosterShiftName == Constants.B || e.RosterShiftName == Constants.C
                                            || e.RosterShiftName == Constants.R))
                            {

                                <tr>
                                    <td>@shift.RosterShiftName</td>
                                    @foreach (var dateTime in Model.Dates)
                                    {
                                        <td>
                                            @Model.Rosters.Where(e => e.RosterShift != null && (e.RosterShift.RosterShiftId == shift.RosterShiftId &&
                                             e.Date.Day == dateTime.Day)).Count()
                                        </td>
                                    }
                                </tr>
                            }

                            @foreach (var catagory in Model.Categories)
                            {
                                <tr style="background-color:cadetblue"><td><strong>@catagory.CategoryName</strong></td></tr>
                                @foreach (var shift in Model.RosterShifts.Where(e => e.RosterShiftName == Constants.A || e.RosterShiftName == Constants.B || e.RosterShiftName == Constants.C
                                            || e.RosterShiftName == Constants.R))
                                {
                                <tr>
                                    <td><font color="blue">@shift.RosterShiftName</font></td>
                                    @foreach (var dateTime in Model.Dates)
                                    {
                                        var count = @Model.Rosters.Where(e => e.RosterShift != null && e.RosterShift.RosterShiftId == shift.RosterShiftId &&
                                              e.Date.Day == dateTime.Day && e.User.CategoryId == catagory.CategoryId).Count();
                                        <td>
                                            @if (count > 0)
                                            {
                                               @count
                                            }
                                            else
                                            {
                                            <font style="color:red">@count</font>
                                            }
                                       
                                        </td>

                                    }
                                </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

